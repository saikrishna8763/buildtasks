
#  SonarQube Testing of Java with Two-Server Setup

##  Goal  
Set up **two separate servers**:  
**Build Server**: for compiling code and running SonarQube analysis  
**SonarQube Server**: for hosting SonarQube and viewing results  

Test static analysis using SonarQube for Java, JavaScript, and Python projects.

---

##  1. SonarQube Server Setup

###  OS Info  
```bash
uname -a
# Linux ip-172-31-20-239 ... x86_64 GNU/Linux
```

###  Install Prerequisites  
```bash
sudo apt update -y
sudo apt install -y unzip
sudo apt install openjdk-17-jre-headless -y
```

###  Download and Extract SonarQube  
```bash
wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-25.4.0.105899.zip
unzip sonarqube-25.4.0.105899.zip
```

###  Start SonarQube  
```bash
cd sonarqube-25.4.0.105899/bin/linux-x86-64
./sonar.sh start
./sonar.sh status
```

Expected Output:
```
Starting SonarQube...
Started SonarQube.
SonarQube is running (PID)
```

###  Open SonarQube in Browser  
```bash
curl ifconfig.me
# Output: 18.232.140.167
```

Access SonarQube at:  
**http://44.202.193.53:9000**  
Login: `admin / admin`
Reset admin Password

---

##  2. Configure SonarQube Projects (Web UI)

For each language (Java ):

Go to **Projects** => **Create Project** 
![Image](https://github.com/user-attachments/assets/d19c6015-ad88-42b8-8804-e132a7569dff)

choose **Local project** 

![](images/sonar3.png)

give **Required details** 

![](images/sonar4.png)

Select **Use global settings**, then choose **Locally**

Choose **Locally** 
 Enter:
   - Project key (e.g., `java`)
   - Project name
![](images/sonar2.png)


Generate a token:
   - Click **Generate** => **Continue**



In 2. choose **the package/code** and **copy the code**

![](images/sonar1.png)

---

##  3. Build Server Setup

###  Install General Prerequisites  
```bash
apt update -y
apt install git -y
apt install openjdk-17-jre-headless -y
apt install maven -y
apt install npm -y
```

---

##  Java Project Analysis (Maven)

###  Clone and Build Java Project  
```bash
git clone https://github.com/<your-java-repo>.git
cd Java-Blog
mvn package
```
```bash
root@ip-172-31-26-213:~/Documentation/java_code# ll
total 64
drwxr-xr-x 4 root root  4096 Apr 13 09:33 ./
drwxr-xr-x 6 root root  4096 Apr 13 09:33 ../
-rw-r--r-- 1 root root 15759 Apr 13 09:33 MySQLDesign.mwb
-rw-r--r-- 1 root root 15550 Apr 13 09:33 MySQLDesign.mwb.bak
-rw-r--r-- 1 root root  4494 Apr 13 09:33 pom.xml
-rw-r--r-- 1 root root  7262 Apr 13 09:33 readme.md
drwxr-xr-x 3 root root  4096 Apr 13 09:33 src/
drwxr-xr-x 7 root root  4096 Apr 13 09:33 target/

```


###  Run SonarQube Analysis  
```bash
mvn clean verify sonar:sonar \
  -Dsonar.projectKey=java \
  -Dsonar.projectName='java' \
  -Dsonar.host.url=http://18.232.140.167:9000 \
  -Dsonar.token=sqp_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
```

Output will show analysis and upload to SonarQube.

![Image](https://github.com/user-attachments/assets/e9f85bb2-1c55-4b45-b7c6-89e7c1c12adb)